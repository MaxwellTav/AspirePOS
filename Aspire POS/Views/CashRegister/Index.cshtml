@model CashRegisterMainModel
@{
    ViewData["Title"] = "Caja | Cerrada";
}

<body>
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            overflow: hidden;
            background-color: #f8f9fa;
        }

        .navbar {
            height: 60px;
            background: #343a40;
            color: white;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            display: flex;
            align-items: center;
            padding: 0 15px;
        }

            .navbar a {
                color: white;
                text-decoration: none;
                font-size: 18px;
            }

            .navbar input {
                max-width: 200px;
            }

            .navbar .btn {
                color: white;
            }

        .container-fluid {
            height: calc(100vh - 60px);
            display: flex;
            margin-top: 60px;
        }

        .col-productos {
            height: 100%;
            overflow: hidden;
            padding: 10px;
            display: flex;
            flex-direction: column;
            width: 60%;
        }

        .col-carrito {
            height: 100%;
            overflow: hidden;
            padding: 10px;
            display: flex;
            flex-direction: column;
            width: 40%;
            background: white;
        }

        .card {
            flex-grow: 0;
            display: flex;
            flex-direction: column;
        }

        .scrollable {
            flex-grow: 1;
            overflow-y: auto;
            max-height: calc(100vh - 120px);
        }

        .fixed-bottom-panel {
            background: white;
            padding: 20px;
            border-top: 2px dotted #ddd;
            position: sticky;
            bottom: -10px;
            width: 100%;
        }

        .product-card {
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .product-card:hover {
            transform: scale(1.05);
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        }


    </style>

    <!-- Navbar Corregido -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <a class="navbar-brand fw-bold" href="#"><i class="fas fa-shipping-fast"></i> Point Of Sell</a>

        <div class="ms-auto d-flex align-items-center">
            <input type="text" placeholder="Código del Producto" class="form-control me-2">
            <button class="btn btn-outline-light me-3"><i class="fas fa-search"></i></button>

            <button class="btn btn-outline-light me-2" id="menuCajaButton">
                <i class="fas fa-th-large"></i> Menú
            </button>

            <button class="btn btn-outline-light me-3" data-widget="fullscreen">
                <i class="fas fa-expand-arrows-alt"></i>
            </button>
        </div>
    </nav>

    <!-- Contenedor Principal -->
    <div class="container-fluid">
        <div class="row w-100 m-0">
            <!-- Panel de Productos -->
            <div class="col-productos">
                <div class="card">
                    <div class="card-header bg-primary text-white d-flex align-items-center">
                        <h5 class="m-0">Productos</h5>
                        <input type="text" id="busquedaProducto" class="form-control w-25 ms-auto" placeholder="Buscar producto..." onkeyup="filtrarProductos()">
                    </div>

                    <div class="card-body scrollable">
                        <div class="row g-2" id="listaProductos">

                            <!-- Productos -->
                            @if (Model.CashRegisters != null && Model.CashRegisters.Any())
                            {
                                @foreach (var product in Model.CashRegisters)
                                {
                                    <div class="col-6 col-md-4 col-lg-3 producto" data-nombre="@product.Name.ToLower()">
                                        <div class="card p-2 product-card" onclick="agregarAlCarrito(@product.Id, '@product.Name', @product.Price, '@product.Images.FirstOrDefault()?.Src')">
                                            <img src="@product.Images.FirstOrDefault()?.Src" class="card-img-top" alt="Producto">
                                            <div class="card-body p-1">
                                                <h5 class="card-title">@product.Name</h5>
                                                <span class="fw-bold h4">$@product.Price</span>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-center text-muted">No hay productos disponibles.</p>
                            }
                            <!-- Productos -->

                        </div>
                    </div>
                </div>
            </div>

            <!-- Panel del Carrito -->
            <div class="col-carrito">
                <div class="card">
                    <div class="card-header bg-danger text-white d-flex align-items-center">
                        <h5 class="m-0">Carrito</h5>
                        <button class="btn btn-light ms-auto" onclick="ponerCarritoEnEspera()">
                            <i class="fas fa-clock"></i> Poner Carrito en espera
                        </button>
                    </div>

                    <div class="card-body scrollable" style="max-height: calc(100vh - 300px);">
                        <div id="carrito-items">
                            <p class="text-center text-muted">El carrito está vacío.</p>
                        </div>
                    </div>

                    <!-- Footer Fijo del Carrito -->
                    <div class="fixed-bottom-panel">
                        <div class="d-flex justify-content-between">
                            <span class="fw-bold">Subtotal:</span>
                            <span id="subtotal">$0.00</span>
                        </div>
                        <div class="d-flex justify-content-between">
                            <span class="fw-bold">Total:</span>
                            <span id="total" class="h3">$0.00</span>
                        </div>

                        <div class="d-flex justify-content-center">
                            <div class="btn-group btn-group-lg">
                                <button type="button" class="btn btn-app bg-gradient-danger" onclick="limpiarCarrito()"><i class="fas fa-store-slash"></i> Limpiar</button>                                
                                <button type="button" class="btn btn-app bg-gradient-warning"><i class="fas fa-percentage"></i>Descuento</button>
                                <button type="button" class="btn btn-app bg-gradient-secondary"><i class="fas fa-plane"></i>Envío</button>
                                <button type="button" class="btn btn-app bg-gradient-info"><i class="fas fa-user"></i>Cliente</button>
                                <button type="button" class="btn btn-app bg-gradient-success" onclick="procesarPago()">
                                    <i class="fas fa-money-bill-wave"></i>Pagar
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

</body>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let carrito = [];
    
    function agregarAlCarrito(id, nombre, precio, imagen) {
        let productoExistente = carrito.find(p => p.id === id);

        if (productoExistente) {
            productoExistente.cantidad += 1;
        } else {
            carrito.push({ id: id, nombre: nombre, precio: precio, cantidad: 1, imagen: imagen });
        }

        console.log("🛒 Carrito actualizado:", carrito);
        actualizarCarrito();
    }

    function actualizarCarrito() {
        let carritoHTML = "";
        let total = 0;

        carrito.forEach((producto, index) => {
            let subtotal = producto.precio * producto.cantidad;
            total += subtotal;

            carritoHTML += `
                <div class="d-flex align-items-center border p-2">
                    <img src="${producto.imagen}" class="me-3" style="width: 50px; height: 50px;" alt="Producto">
                    <div class="flex-grow-1">
                        <h6>${producto.nombre}</h6>
                        <input type="number" value="${producto.cantidad}" min="1" class="form-control form-control-sm w-25 d-inline ms-2"
                               onchange="cambiarCantidad(${index}, this.value)">
                        <span class="fw-bold">$${subtotal.toFixed(2)}</span>
                    </div>
                    <button class="btn btn-danger ms-2" onclick="eliminarDelCarrito(${index})"><i class="fas fa-times"></i></button>
                </div>
            `;
        });

        $("#carrito-items").html(carritoHTML);
        $("#subtotal").text(`$${total.toFixed(2)}`);
        $("#total").text(`$${total.toFixed(2)}`);

        let audio = new Audio('/fxs/beep.mp3');
        audio.volume = 0.35;
        audio.play();
    }

    function cambiarCantidad(index, nuevaCantidad) {
        carrito[index].cantidad = parseInt(nuevaCantidad);
        actualizarCarrito();
    }

    function eliminarDelCarrito(index) {
        carrito.splice(index, 1);
        actualizarCarrito();
    }

    function limpiarCarrito() {
        carrito = [];
        actualizarCarrito();

        Swal.fire("Carrito vacío", "Se han eliminado todos los productos.", "success");
    }


    function procesarPago() {
        if (carrito.length === 0) {
            Swal.fire("Error", "No hay productos en el carrito", "error");
            return;
        }
        
        let orden = {
            estado: "processing",
            productos: carrito.map(p => ({
                product_id: p.id,
                quantity: p.cantidad
            }))
        };

        console.log("📦 JSON enviado:", JSON.stringify(orden));

        $.ajax({
            url: "/CashRegister/ProcesarOrden",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(orden),
            success: function (response) {
                Swal.fire("Éxito", "Compra realizada con éxito", "success");
                carrito = [];
                actualizarCarrito();
            },
            error: function (xhr, status, error) {
                console.error("❌ Error en la petición AJAX:", xhr.responseText);
                Swal.fire("Error", "No se pudo procesar la compra", "error");
            }
        });
    }

    function verProducto() {
        Swal.fire('Producto seleccionado', 'Aquí puedes agregar detalles del producto', 'info');
    }

    $(document).ready(function () {
        $("#menuCajaButton").click(function (event) {
            event.preventDefault();

            Swal.fire({
                title: 'Menú del cajero',
                html: `
                    <div style="text-align: left;">
                        <div class="info-text"><strong>Hora de inicio de la jornada:</strong> 08:00 AM</div>
                        <div class="info-text"><strong>Órdenes realizadas:</strong> 12</div>
                        <div class="info-text"><strong>Órdenes pendientes:</strong> 5</div>
                        <div class="info-text"><strong>Ventas totales:</strong> $500</div>
                        <div class="info-text"><strong>Código de la caja:</strong> C123</div>
                        <div class="info-text"><strong>Nombre del cajero:</strong> Juan Pérez</div>
                        <div class="info-text"><strong>Cantidad de efectivo en la caja:</strong> $300</div>
                    </div>
                    <div class="btn-menu-container">
                        <button id="descargarReporte" class="btn btn-primary btn-menu">Descargar Reporte</button>
                        <button id="verTodasOrdenes" class="btn btn-primary btn-menu">Ver Todas las Órdenes</button>
                        <button id="irALogin" class="btn btn-secondary btn-menu">Cierre de sesión</button>
                        <button id="arqueoCaja" class="btn btn-warning btn-menu">Arqueo</button>
                        <button id="cierreCaja" class="btn btn-danger btn-menu">Cierre de Caja</button>
                    </div>
                `,
                showCloseButton: true,
                showConfirmButton: false
            });

            $("#descargarReporte").click(function () {
                Swal.fire('Reporte descargado', '', 'success');
            });

            $("#verTodasOrdenes").click(function () {
                Swal.fire('Mostrando todas las órdenes', '', 'info');
            });

            $("#arqueoCaja").click(function () {
                Swal.fire('Realizando arqueo de caja...', '', 'warning');
            });

            $("#cierreCaja").click(function () {
                Swal.fire('Cerrando la caja...', '', 'error');
            });

            $("#irALogin").click(function () {
                window.location.href = '@Url.Action("Index", "Login")';
            });
        });
    });

    function filtrarProductos() {
        let input = document.getElementById("busquedaProducto").value.toLowerCase();
        let productos = document.querySelectorAll(".producto");
        
        productos.forEach(producto => {
            let nombre = producto.getAttribute("data-nombre");
            if (nombre.includes(input)) {
                producto.style.display = "block";
            } else {
                producto.style.display = "none";
            }
        });
    }

    function ponerCarritoEnEspera() {
        if (carrito.length === 0) {
            Swal.fire("Error", "No hay productos en el carrito", "error");
            return;
        }

        let orden = {
            estado: "on-hold",
            productos: carrito.map(p => ({
                product_id: p.id,
                quantity: p.cantidad
            }))
        };

        console.log("📦 JSON enviado para espera:", JSON.stringify(orden));

        $.ajax({
            url: "/CashRegister/ProcesarOrden",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(orden),
            success: function (response) {
                Swal.fire("Carrito en espera", "La orden ha sido guardada en WooCommerce.", "success");
                carrito = [];
                actualizarCarrito();
            },
            error: function (xhr, status, error) {
                console.error("❌ Error en la petición AJAX:", xhr.responseText);
                Swal.fire("Error", "No se pudo guardar el carrito en espera", "error");
            }
        });
    }


</script>
